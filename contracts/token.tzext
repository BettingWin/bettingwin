@lib.tzlib
@token.tzlib

parameter
  (or 
    (or 
      unit                  # function: get_token_info
      key)                  # function: get_balance
    (or 
      (pair key nat)        # function: transfer_token
      unit));               # any extension function should be added here

storage 
  (pair 
    unit                    # any extension data should be stored here
    (pair 
      (map key nat)         # address balance map
      (pair 
        nat                 # total supply
        (pair 
          nat               # decimals
          (pair 
            string          # name
            string)))));    # symbol

return 
  (pair 
    nat                     # error return (0: success; 1: no such account; 2: balance insufficient)
    (or 
      (or 
        (pair nat (pair nat (pair string string)))    # get_token_info return         
        nat)                                          # get_balance return (X: balance)
      (or
        unit                # transfer return
        unit)));            # extension return should be added here

code 
  { `unpair;
    IF_LEFT
      { IF_LEFT
          { # function: get_token_info
            DROP; DUP; `unpair; DROP; `unpair; DROP;
            LEFT nat;
            LEFT (or unit unit);
            PUSH nat 0; PAIR;
            PAIR }
          { # function: get_balance
            DIP { DUP; CDAR };
            @@get_source_balance
              { RIGHT (pair nat (pair nat (pair string string)));
                LEFT (or unit unit);
                PUSH nat 0; PAIR;
                PAIR }
              { `fail_with 1 } } } 
      { IF_LEFT
          { # function: transfer_token
            `unpair; DIIP { `unpair; SWAP; `unpair };
            @@get_source_key;
            @@get_source_balance[0 : 3]
              { @compare_source_balance_with_target_amount[0 : 3]
                  { @@get_target_balance[2 : 4]
                      {}
                      { PUSH nat 0 }; 
                    @@calc_new_source_balance[1 : 4];
                    @@calc_new_target_balance[1 : 5];
                    @@update_target_balance[5 : 0 : 7];
                    @@update_source_balance[5 : 2 : 0];
                    dup[0 : 10]; PAIR;
                    DIP { DROP; DROP; DROP; 
                          DROP; DROP; DROP; 
                          DROP; DROP; DROP; 
                          DROP; DROP };
                    SWAP; PAIR;
                    `success }
                  { DROP; DROP; DROP; DROP; PAIR; SWAP; PAIR; 
                    `fail_with 2 } } 
              { DROP; DROP; DROP; PAIR; SWAP; PAIR; 
                `fail_with 1 }}
          { # extension return should be added here
            RIGHT unit;
            RIGHT (or (pair nat (pair nat (pair string string))) nat);
            PUSH nat 0; PAIR;
            PAIR } } };